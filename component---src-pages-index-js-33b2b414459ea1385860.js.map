{"version":3,"sources":["webpack:///./src/components/postList.js","webpack:///./src/components/rootAside.js","webpack:///./src/pages/index.js"],"names":["props","posts","list","map","post","key","path","css","className","mq","display","tags","tag","label","link","marginLeft","date","style","margin","postTitleCss","to","title","dangerouslySetInnerHTML","__html","description","Ul","Li","H4","allMarkdownRemark","edges","reduce","total","item","$tags","node","frontmatter","push","Array","from","Set","BlogIndex","render","data","this","siteTitle","site","siteMetadata","author","fields","slug","excerpt","header","left","transform","fontSize","marginTop","justifyContent","aside","React","Component","pageQuery"],"mappings":"2FAAA,0E,sbAQe,aAACA,GACd,IAAMC,EAAQD,EAAME,MAAQ,GAE5B,OACE,uBACGD,EAAME,KAAI,SAAAC,GACT,OACE,uBACEC,IAAKD,EAAKE,KACVC,IAAG,GASH,0BACE,mBACEC,UAAU,YACVD,IAAKA,YACDE,YAAG,CACHC,QAAS,CAAC,QAAS,UAFpB,yBAOH,mBACEH,IAAG,GASDH,EAAKO,KAAKR,KAAI,SAAAS,GACZ,OACE,YAAC,IAAD,CAAKP,IAAKO,EAAKC,MAAOD,EAAKE,MAAI,QAKvC,oBACEP,IAAKA,YACDE,YAAG,CACHM,WAAY,CAAC,EAAG,MAFjB,mCAQFX,EAAKY,OAGV,kBACEC,MAAO,CACLC,OAAQ,WAGV,YAAC,OAAD,CACEX,IAAKY,IACLC,GAAIhB,EAAKE,MAERF,EAAKiB,SAIZ,2BACE,iBACEC,wBAAyB,CACvBC,OAAQnB,EAAKoB,gBAInB,YAAC,OAAD,CACEjB,IAAG,EAiBHa,GAAIhB,EAAKE,MAlBX,e,2jBCjFZ,IAAMmB,EAAE,2FAKFC,EAAE,+GAMFC,EAAE,iJAQO,aAAO,IAsBhBhB,EAtBe,OACXiB,kBAqBqBC,MAAMC,QAAO,SAACC,EAAOC,GAChD,IAAMC,EAAQD,EAAKE,KAAKC,YAAYxB,KAGpC,OAFAoB,EAAMK,KAAN,MAAAL,EAAK,EAASE,IAEPF,IACN,IAGH,OAFApB,EAAO0B,MAAMC,KAAK,IAAIC,IAAI5B,IAGxB,uBACE,mBAAKM,MAAO,IACV,YAACU,EAAD,aACA,YAACF,EAAD,KAEId,EAAKR,KAAI,SAAAS,GACP,OACE,YAACc,EAAD,CAAIrB,IAAKO,GACP,YAAC,OAAD,CAAMQ,GAAE,QAAUR,GAAQA,W,8FClDtC4B,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAK3C,MAAd0C,KACFE,EAAYF,EAAKG,KAAKC,aAAazB,MACnC0B,EAASL,EAAKG,KAAKC,aAAaC,OAEhC9C,EADQyC,EAAKd,kBAAkBC,MACjB1B,KAAI,YAAa,IAAX+B,EAAU,EAAVA,KACxB,MAAO,CACLb,MAAOa,EAAKC,YAAYd,OAASa,EAAKc,OAAOC,KAC7CzB,YAAaU,EAAKC,YAAYX,aAAeU,EAAKgB,QAClDlC,KAAMkB,EAAKC,YAAYnB,KACvBL,KAAMuB,EAAKC,YAAYxB,KACvBL,KAAM,QAAU4B,EAAKc,OAAOC,SAI1BE,EACJ,YAAC,IAAD,KACE,mBACE5C,IAAKA,YAAF,6BAGCE,YAAG,CACH2C,KAAM,CAAC,MAAO,QACdC,UAAW,CAAC,wBAAyB,0BAIzC,kBACE9C,IAAKA,YACDE,YAAG,CACH6C,SAAU,CAAC,OAAQ,UAFpB,sEASH,YAAC,OAAD,CAAMlC,GAAG,KAAK2B,IAEhB,mBAAK9B,MAAO,CAACsC,UAAW,KACtB,YAAC,IAAD,CACEhD,IAAKA,YACDE,YAAG,CACH+C,eAAgB,CAAC,SAAU,kBASnCC,EACJ,mBACElD,IAAKA,YAAF,8CAGCE,YAAG,CACHC,QAAS,CAAC,OAAQ,WAJnB,MAQH,YAAC,EAAD,OAIJ,OACE,YAAC,IAAD,CACEW,MAAOuB,EACPO,OAAQA,EACRM,MAAOA,GAEP,YAAC,IAAD,CAAKpC,MAAM,cACX,YAAC,IAAD,CACEnB,KAAMD,M,GA3EQyD,IAAMC,WAoFjBC,GAFEpB,YAEO","file":"component---src-pages-index-js-33b2b414459ea1385860.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport {css} from '@emotion/core'\n\nimport { mq } from '../styles/mq'\nimport Tag from './tag'\nimport { postTitle as postTitleCss } from '../styles/common'\n\nexport default (props) => {\n  const posts = props.list || [];\n\n  return (\n    <div>\n      {posts.map(post => {\n        return (\n          <article\n            key={post.path}\n            css={css`\n              padding: 50px 0;\n              border-top: solid 1px #d9d9d9;\n              &:first-of-type {\n                padding-top: 0;\n                border: 0;\n              }\n            `}\n          >\n            <header>\n              <div \n                className=\"post-data\"\n                css={css`\n                  ${mq({\n                    display: ['block', 'flex'],\n                  })};\n                  align-items: center;\n                `}\n              >\n                <div\n                  css={css`\n                    display: flex;\n                    flex-wrap: wrap;\n                    a {\n                      margin-top: 5px;\n                      margin-bottom: 5px;\n                    }\n                  `}>\n                  {\n                    post.tags.map(tag => {\n                      return (\n                        <Tag key={tag} label={tag} link />\n                      )\n                    })\n                  }\n                </div>\n                <span\n                  css={css`\n                    ${mq({\n                      marginLeft: [0, 20],\n                    })};\n                    color: #a9afb3;\n                    font-size: 16px;\n                  `}\n                >\n                  {post.date}\n                </span>\n              </div>\n              <h3\n                style={{\n                  margin: '20px 0',\n                }}\n              >\n                <Link \n                  css={postTitleCss} \n                  to={post.path}\n                >\n                  {post.title}\n                </Link>\n              </h3>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: post.description,\n                }}\n              />\n            </section>\n            <Link\n              css={css`\n                position: relative;\n                color: #1464be;\n                &:after {\n                  content: '';\n                  position: absolute;\n                  left: 0;\n                  background: #1464be;\n                  right: 0;\n                  bottom: -2px;\n                  height: 2px;\n                  transition: all .3s cubic-bezier(.7,0,.3,1);\n                }\n                &:hover:after {\n                  transform: scaleX(0);\n                }\n              `}\n              to={post.path}\n            >\n              阅读全文\n            </Link >\n          </article>\n        )\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nconst Ul = styled.ul`\n  padding: 0;\n  margin: 25px 0;\n`\n\nconst Li = styled.li`\n  color: #d0414e;\n  font-size: 18px;\n  font-weight: 600;\n`\n\nconst H4 = styled.h4`\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: 600;\n  color: #73797d;\n  margin: 0;\n`\n\nexport default () => {\n  const { allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n              tags\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  let tags = allMarkdownRemark.edges.reduce((total, item) => {\n    const $tags = item.node.frontmatter.tags\n    total.push(...$tags)\n\n    return total\n  }, [])\n  tags = Array.from(new Set(tags))\n\n  return (\n    <div>\n      <div style={{}}>\n        <H4>Tags</H4>\n        <Ul>\n          {\n            tags.map(tag => {\n              return (\n                <Li key={tag}>\n                  <Link to={`/tag/${tag}`}>{tag}</Link>\n                </Li>\n              )\n            })\n          }\n        </Ul>\n      </div>\n    </div>\n  )\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from '@emotion/core'\n\nimport { mq } from '../styles/mq'\nimport Layout from \"../components/layout\"\nimport RootAside from '../components/rootAside'\nimport HeaderWrapper from '../components/headerWrapper'\nimport Socials from '../components/socials'\nimport SEO from \"../components/seo\"\nimport PostList from '../components/postList'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const author = data.site.siteMetadata.author\n    const edges = data.allMarkdownRemark.edges\n    const posts = edges.map(({node}) => {\n      return {\n        title: node.frontmatter.title || node.fields.slug,\n        description: node.frontmatter.description || node.excerpt,\n        date: node.frontmatter.date,\n        tags: node.frontmatter.tags,\n        path: '/post' + node.fields.slug,\n      }\n    })\n\n    const header = (\n      <HeaderWrapper>\n        <div\n          css={css`\n            position: absolute;\n            top: 50%;\n            ${mq({\n              left: ['50%', 'auto'],\n              transform: ['translate(-50%, -50%)', 'translate(0, -50%)'],\n            })}\n          `}\n        >\n          <h1\n            css={css`\n              ${mq({\n                fontSize: ['32px', '42px'],\n              })};\n              font-weight: 700;\n              margin: 0;\n              letter-spacing: -.5px;\n              text-align: center;\n            `}>\n            <Link to=\"/\">{author}</Link>\n          </h1>\n          <div style={{marginTop: 20}}>\n            <Socials\n              css={css`\n                ${mq({\n                  justifyContent: ['center', 'normal'],\n                })}\n              `}\n            />\n          </div>\n        </div>\n      </HeaderWrapper>\n    )\n\n    const aside = (\n      <div\n        css={css`\n          width: 230px;\n          border-right: 1px solid #d9d9d9;\n          ${mq({\n            display: ['none', 'block'],\n          })};\n        `}\n      >\n        <RootAside />\n      </div>\n    )\n\n    return (\n      <Layout \n        title={siteTitle}\n        header={header}\n        aside={aside}\n      >\n        <SEO title=\"All posts\" />\n        <PostList\n          list={posts}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}