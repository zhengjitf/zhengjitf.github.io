{"version":3,"sources":["webpack:///./src/templates/tagged-post.js","webpack:///./src/components/postList.js"],"names":["pageContext","data","tag","location","allMarkdownRemark","edges","totalCount","posts","map","node","frontmatter","title","description","date","tags","path","fields","slug","header","withBack","css","label","mq","fontSize","list","pageQuery","props","post","key","className","display","link","marginLeft","style","margin","postTitleCss","to","dangerouslySetInnerHTML","__html"],"mappings":"6FAAA,uI,0KASe,sBAAsC,IAAnCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KACrBC,GAD0C,EAAfC,SACnBH,EAARE,KAD0C,EAEpBD,EAAKG,kBAA3BC,EAF0C,EAE1CA,MAAOC,EAFmC,EAEnCA,WAETC,EAAQF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAAW,EAMhCA,EAAKC,YAET,MAAO,CACLC,MATkC,EAElCA,MAQAC,YAVkC,EAGlCA,YAQAC,KAXkC,EAIlCA,KAQAC,KAZkC,EAKlCA,KAQAC,KAAM,QAAUN,EAAKO,OAAOC,SAI1BC,EACJ,YAAC,IAAD,CAAeC,UAAQ,GACrB,mBACEC,IAAG,GAKH,YAAC,IAAD,CAAKC,MAAM,QACX,kBACED,IAAKA,YAAF,4DAICE,YAAG,CACHC,SAAU,CAAC,OAAQ,UALpB,MAQDrB,GAEJ,mBACEkB,IAAG,GAMDd,EAPJ,cAaN,OACE,YAAC,IAAD,CACEY,OAAQA,GAER,YAAC,IAAD,CACEM,KAAMjB,MAMP,IAAMkB,EAAS,c,kCC1EtB,0E,sbAQe,aAACC,GACd,IAAMnB,EAAQmB,EAAMF,MAAQ,GAE5B,OACE,uBACGjB,EAAMC,KAAI,SAAAmB,GACT,OACE,uBACEC,IAAKD,EAAKZ,KACVK,IAAG,GASH,0BACE,mBACES,UAAU,YACVT,IAAKA,YACDE,YAAG,CACHQ,QAAS,CAAC,QAAS,UAFpB,yBAOH,mBACEV,IAAG,GASDO,EAAKb,KAAKN,KAAI,SAAAN,GACZ,OACE,YAAC,IAAD,CAAK0B,IAAK1B,EAAKmB,MAAOnB,EAAK6B,MAAI,QAKvC,oBACEX,IAAKA,YACDE,YAAG,CACHU,WAAY,CAAC,EAAG,MAFjB,mCAQFL,EAAKd,OAGV,kBACEoB,MAAO,CACLC,OAAQ,WAGV,YAAC,OAAD,CACEd,IAAKe,IACLC,GAAIT,EAAKZ,MAERY,EAAKhB,SAIZ,2BACE,iBACE0B,wBAAyB,CACvBC,OAAQX,EAAKf,gBAInB,YAAC,OAAD,CACEQ,IAAG,EAiBHgB,GAAIT,EAAKZ,MAlBX","file":"component---src-templates-tagged-post-js-68139974fd1492e85a11.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/core'\n\nimport { mq } from '../styles/mq'\nimport Layout from '../components/layout'\nimport PostList from '../components/postList'\nimport HeaderWrapper from '../components/headerWrapper'\nimport Tag from '../components/tag'\n\nexport default ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n\n  const posts = edges.map(({ node }) => {\n    const {\n      title,\n      description,\n      date,\n      tags,\n    } = node.frontmatter\n\n    return {\n      title,\n      description,\n      date,\n      tags,\n      path: '/post' + node.fields.slug,\n    }\n  })\n\n  const header = (\n    <HeaderWrapper withBack>\n      <div\n        css={css`\n          margin-top: 60px;\n          text-align: center;\n        `}\n      >\n        <Tag label='TAG' />\n        <h1\n          css={css`\n            line-height: 1.33;\n            letter-spacing: -.6px;\n            margin: 30px 0 18px;\n            ${mq({\n              fontSize: ['32px', '42px'],\n            })};\n          `}>\n          { tag }\n        </h1>\n        <div\n          css={css`\n            color: #a9afb3;\n            font-family: Montserrat,sans-serif;\n            font-weight: 200;\n            font-size: 15px;\n          `}>\n          { totalCount } post(s)\n        </div>\n      </div>\n    </HeaderWrapper>\n  )\n\n  return (\n    <Layout\n      header={header}\n    >\n      <PostList\n        list={posts}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport { Link } from 'gatsby'\nimport {css} from '@emotion/core'\n\nimport { mq } from '../styles/mq'\nimport Tag from './tag'\nimport { postTitle as postTitleCss } from '../styles/common'\n\nexport default (props) => {\n  const posts = props.list || [];\n\n  return (\n    <div>\n      {posts.map(post => {\n        return (\n          <article\n            key={post.path}\n            css={css`\n              padding: 50px 0;\n              border-top: solid 1px #d9d9d9;\n              &:first-of-type {\n                padding-top: 0;\n                border: 0;\n              }\n            `}\n          >\n            <header>\n              <div \n                className=\"post-data\"\n                css={css`\n                  ${mq({\n                    display: ['block', 'flex'],\n                  })};\n                  align-items: center;\n                `}\n              >\n                <div\n                  css={css`\n                    display: flex;\n                    flex-wrap: wrap;\n                    a {\n                      margin-top: 5px;\n                      margin-bottom: 5px;\n                    }\n                  `}>\n                  {\n                    post.tags.map(tag => {\n                      return (\n                        <Tag key={tag} label={tag} link />\n                      )\n                    })\n                  }\n                </div>\n                <span\n                  css={css`\n                    ${mq({\n                      marginLeft: [0, 20],\n                    })};\n                    color: #a9afb3;\n                    font-size: 16px;\n                  `}\n                >\n                  {post.date}\n                </span>\n              </div>\n              <h3\n                style={{\n                  margin: '20px 0',\n                }}\n              >\n                <Link \n                  css={postTitleCss} \n                  to={post.path}\n                >\n                  {post.title}\n                </Link>\n              </h3>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: post.description,\n                }}\n              />\n            </section>\n            <Link\n              css={css`\n                position: relative;\n                color: #1464be;\n                &:after {\n                  content: '';\n                  position: absolute;\n                  left: 0;\n                  background: #1464be;\n                  right: 0;\n                  bottom: -2px;\n                  height: 2px;\n                  transition: all .3s cubic-bezier(.7,0,.3,1);\n                }\n                &:hover:after {\n                  transform: scaleX(0);\n                }\n              `}\n              to={post.path}\n            >\n              阅读全文\n            </Link >\n          </article>\n        )\n      })}\n    </div>\n  )\n}\n"],"sourceRoot":""}